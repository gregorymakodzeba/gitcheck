{
  "name": "scienft",
  "version": "1.0.0",
  "author": "",
  "license": "ISC",
  "scripts": {
    "rimrafAll": "rimraf hardhat.config.cjs hardhat.config.ts tsconfig.json",
    "build": "yarn run rimrafAll && cpy hardhat.config.hardhat . --rename=hardhat.config.ts && cpy tsconfig.hardhat.json . --rename=tsconfig.json && npx hardhat clean && npx hardhat compile",
    "test": "yarn run rimrafAll && cpy hardhat.config.hardhat . --rename=hardhat.config.ts && cpy tsconfig.hardhat.json . --rename=tsconfig.json && npx hardhat compile && npx hardhat test",
    "coverage": "yarn run rimrafAll && cpy hardhat.config.hardhat . --rename=hardhat.config.ts && cpy tsconfig.hardhat.json . --rename=tsconfig.json && npx hardhat coverage",
    "start": "npx hardhat node",
    "deploy:local": "yarn run rimrafAll && cpy hardhat.config.hardhat . --rename=hardhat.config.ts && cpy tsconfig.hardhat.json . --rename=tsconfig.json && npx hardhat run --network localhost scripts/deployment/deployAll.ts",
    "deploy:fuji": "yarn run rimrafAll && cpy hardhat.config.hardhat . --rename=hardhat.config.ts && cpy tsconfig.hardhat.json . --rename=tsconfig.json && npx hardhat run --network fuji scripts/deployment/deployAll.ts",
    "typechain": "npx hardhat typechain",
    "format": "prettier --write .",
    "docgen": "npx hardhat docgen",
    "ncu": "npx npm-check-updates -u",
    "metrics": "npx solidity-code-metrics ./contracts/*.sol --html > metrics.html",
    "buf:format": "npx buf format --diff -w --exit-code --path ./src/blockchain/v1/blockchain.proto && npx buf format --diff -w --exit-code --path ./src/tokens/v1/tokens.proto && npx buf format --diff -w --exit-code ./src/offers/v1/offers.proto && npx buf format --diff -w --exit-code ./src/listings/v1/listings.proto",
    "buf:lint": "npx buf lint ./src/tokens/v1/tokens.proto && npx buf lint ./src/offers/v1/offers.proto && npx buf lint ./src/listings/v1/listings.proto",
    "nest:build": "yarn run rimrafAll && cpy hardhat.config.nest . --rename=hardhat.config.cjs && cpy tsconfig.nest.json . --rename=tsconfig.json && nest build",
    "about:nest:start": "echo 'If you most recently built solidity for for testing coverage, run hardhat build first'",
    "nest:start:local": "yarn run rimrafAll && cpy hardhat.config.nest . --rename=hardhat.config.cjs && cpy tsconfig.nest.json . --rename=tsconfig.json && nest build && nest start -- 31337",
    "nest:start:fuji": "yarn run rimrafAll  && cpy hardhat.config.nest . --rename=hardhat.config.cjs && cpy tsconfig.nest.json . --rename=tsconfig.json && nest build && nest start -- 43113",
    "about:nest:test": "echo 'unit tests for the RPC service'",
    "nest:test": "yarn run rimrafAll && cpy hardhat.config.nest . --rename=hardhat.config.cjs && cpy tsconfig.nest.json . --rename=tsconfig.json && tsc --project tsconfig.json && mocha ./src/test/**/* --exit",
    "about:nest:ts-proto-windows": "echo 'Note that these commands are set up for windows -- remove \".cmd\" to run on linux'",
    "nest:ts-proto-windows:tokens": "protoc --ts_proto_out=. --plugin=node_modules/.bin/protoc-gen-ts_proto.cmd --ts_proto_opt=snakeToCamel=true --ts_proto_opt=outputEncodeMethods=false --ts_proto_opt=outputJsonMethods=false --ts_proto_opt=outputClientImpl=false --ts_proto_opt=fileSuffix=.interface ./src/tokens/v1/tokens.proto && yarn run format",
    "nest:ts-proto-windows:offers": "protoc --ts_proto_out=. --plugin=node_modules/.bin/protoc-gen-ts_proto.cmd --ts_proto_opt=snakeToCamel=true --ts_proto_opt=outputEncodeMethods=false --ts_proto_opt=outputJsonMethods=false --ts_proto_opt=outputClientImpl=false --ts_proto_opt=fileSuffix=.interface ./src/offers/v1/offers.proto && yarn run format",
    "nest:ts-proto-windows:listings": "protoc --ts_proto_out=. --plugin=node_modules/.bin/protoc-gen-ts_proto.cmd --ts_proto_opt=snakeToCamel=true --ts_proto_opt=outputEncodeMethods=false --ts_proto_opt=outputJsonMethods=false --ts_proto_opt=outputClientImpl=false --ts_proto_opt=fileSuffix=.interface ./src/listings/v1/listings.proto && yarn run format",
    "nest:ts-proto-windows:blockchain": "protoc  --ts_proto_out=. --plugin=node_modules/.bin/protoc-gen-ts_proto.cmd --ts_proto_opt=snakeToCamel=true --ts_proto_opt=outputEncodeMethods=false --ts_proto_opt=outputJsonMethods=false --ts_proto_opt=outputClientImpl=false --ts_proto_opt=fileSuffix=.interface ./src/blockchain/v1/blockchain.proto && yarn run format",
    "nest:ts-proto:tokens": "protoc --ts_proto_out=. --plugin=node_modules/.bin/protoc-gen-ts_proto --ts_proto_opt=snakeToCamel=true --ts_proto_opt=outputEncodeMethods=false --ts_proto_opt=outputJsonMethods=false --ts_proto_opt=outputClientImpl=false --ts_proto_opt=fileSuffix=.interface ./src/tokens/v1/tokens.proto && yarn run format ",
    "nest:ts-proto:offers": "protoc --ts_proto_out=. --plugin=node_modules/.bin/protoc-gen-ts_proto --ts_proto_opt=snakeToCamel=true --ts_proto_opt=outputEncodeMethods=false --ts_proto_opt=outputJsonMethods=false --ts_proto_opt=outputClientImpl=false --ts_proto_opt=fileSuffix=.interface ./src/offers/v1/offers.proto && yarn run format ",
    "nest:ts-proto:listings": "protoc --ts_proto_out=. --plugin=node_modules/.bin/protoc-gen-ts_proto --ts_proto_opt=snakeToCamel=true --ts_proto_opt=outputEncodeMethods=false --ts_proto_opt=outputJsonMethods=false --ts_proto_opt=outputClientImpl=false --ts_proto_opt=fileSuffix=.interface ./src/listings/v1/listings.proto && yarn run format",
    "nest:ts-proto:blockchain": "protoc --ts_proto_out=. --plugin=node_modules/.bin/protoc-gen-ts_proto --ts_proto_opt=snakeToCamel=true --ts_proto_opt=outputEncodeMethods=false --ts_proto_opt=outputJsonMethods=false --ts_proto_opt=outputClientImpl=false --ts_proto_opt=fileSuffix=.interface ./src/blockchain/v1/blockchain.proto && yarn run format",
    "about:e2etest": "echo 'You must first start the RPC service before running the integrations tests.",
    "e2etest": "nyc --reporter=lcov --reporter=text-summary --reporter=html npx ts-mocha ./e2etest/test.ts"
  },
  "description": "ScieNFT contract development",
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ScieNFT/blockchain.git"
  },
  "bugs": {
    "url": "https://github.com/ScieNFT/blockchain/issues"
  },
  "homepage": "https://github.com/ScieNFT/blockchain#readme",
  "devDependencies": {
    "@babel/core": "^7.21.8",
    "@bufbuild/buf": "^1.18.0-1",
    "@ethersproject/abi": "^5.7.0",
    "@ethersproject/bytes": "^5.7.0",
    "@ethersproject/providers": "^5.7.2",
    "@ethersproject/strings": "^5.7.0",
    "@grpc/grpc-js": "^1.8.14",
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@narya-ai/contracts": "^0.4.0",
    "@nestjs/microservices": "^9.4.1",
    "@nestjs/testing": "^9.4.1",
    "@nomicfoundation/hardhat-chai-matchers": "^1.0.6",
    "@nomicfoundation/hardhat-network-helpers": "^1.0.8",
    "@nomiclabs/hardhat-ethers": "^2.2.3",
    "@nomiclabs/hardhat-etherscan": "^3.1.7",
    "@typechain/ethers-v5": "^10.2.1",
    "@typechain/hardhat": "^6.1.6",
    "@types/chai": "^4.3.5",
    "@types/mocha": "^10.0.1",
    "@types/node": "^20.2.1",
    "avalanche": "^3.15.5",
    "babel-jest": "^29.5.0",
    "chai": "^4.3.7",
    "esm": "^3.2.25",
    "ethers": "5",
    "hardhat-ethers": "^1.0.1",
    "hardhat-gas-reporter": "^1.0.9",
    "jest": "^29.5.0",
    "mocha": "^10.2.0",
    "nyc": "^15.1.0",
    "prettier": "^2.8.8",
    "prettier-plugin-solidity": "^1.1.3",
    "protoc": "1.0.4",
    "solhint": "^3.4.1",
    "solidity-coverage": "^0.8.2",
    "solidity-metrics": "^0.0.5",
    "ts-generator": "^0.1.1",
    "ts-jest": "^29.1.0",
    "ts-mocha": "^10.0.0",
    "ts-node": "^10.9.1",
    "ts-proto": "^1.147.3",
    "typescript": "^5.0.4"
  },
  "dependencies": {
    "@grpc/proto-loader": "^0.7.7",
    "@nestjs/cli": "^9.5.0",
    "@nestjs/common": "^9.4.1",
    "@nestjs/config": "^2.3.2",
    "@nestjs/core": "^9.4.1",
    "@nestjs/platform-express": "^9.4.1",
    "@nomicfoundation/hardhat-toolbox": "^2.0.2",
    "@openzeppelin/contracts": "^4.8.3",
    "cpy-cli": "^4.2.0",
    "dotenv": "^16.0.3",
    "hardhat": "^2.14.0",
    "hardhat-abi-exporter": "^2.10.1",
    "hardhat-docgen": "^1.3.0",
    "multiformats": "9",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^5.0.1",
    "rxjs": "^7.8.1",
    "typechain": "^8.1.1"
  }
}
